
import { corsHeaders } from '../_shared/cors.ts';

interface RequestPayload {
  to: string[];
  subject: string;
  summary: string;
}

Deno.serve(async (req: Request) => {
   if (req.method === 'OPTIONS') {
    return new Response(null, { 
      status: 200, 
      headers: corsHeaders 
    });
  }

  try {
    const { to, subject, summary }: RequestPayload = await req.json();

    if (!to?.length || !summary?.trim()) {
      return new Response(
        JSON.stringify({ error: 'Recipients and summary are required' }),
        { status: 400, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
      );
    }

    const resendApiKey = Deno.env.get('RESEND_API_KEY');
    if (!resendApiKey) {
      return new Response(
        JSON.stringify({ error: 'Resend API key not configured' }),
        { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
      );
    }

    const htmlContent = `
      <html>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
          <h2>Meeting Summary</h2>
          <div style="background-color: #f5f5f5; padding: 20px; border-radius: 5px;">
            <pre style="white-space: pre-wrap; font-family: inherit;">${summary}</pre>
          </div>
          <br>
          <p style="color: #666; font-size: 12px;">This summary was generated by AI Meeting Summarizer</p>
        </body>
      </html>
    `;

    const emailResponse = await fetch('https://api.resend.com/emails', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${resendApiKey}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        from: 'Meeting Summarizer <onboarding@resend.dev>', 
        to,
        subject,
        html: htmlContent,
        text: `Meeting Summary\n\n${summary}\n\nGenerated by AI Meeting Summarizer`
      }),
    });

    const emailData = await emailResponse.json();

    if (!emailResponse.ok) {
      console.error('Resend API Error:', emailData);
      return new Response(
        JSON.stringify({ error: 'Resend API error', details: emailData }),
        { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
      );
    }

    return new Response(
      JSON.stringify({ success: true, messageId: emailData.id }),
      { headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );

  } catch (error) {
    console.error('Error in send-email function:', error);
    return new Response(
      JSON.stringify({ error: 'Internal server error', details: String(error) }),
      { status: 500, headers: { ...corsHeaders, 'Content-Type': 'application/json' } }
    );
  }
});
